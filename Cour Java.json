{
    "Titre": "Cour Java",
    "Contenu": {
        "A TTENTION": "La métho de main ne p eut pas retourner d'entier comme en C. public s t a t i c intmain( String [] args) E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 69 / 90 La métho de main de java : exemple Exemple public class Logement { // l e programme p r i n c i p a l public s t a t i c void main( String [] args) { Logement asnieres92 ; asnieres92 = newLogement(80.0d,2.5e+5,\"Linus\"); System. out . println ( asnieres92 . annonce ()); asnieres92 . changerPrix (300000.0d); System. out . println ( asnieres92 . surface ); System. out . println ( asnieres92 . prix ()); asnieres92 . vendre(\"Djikstra\"); System. out . println ( asnieres92 . proprietaire ()); } } E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 70 / 90 Le p olymo rphisme en Java : dé\u001cnition On p eut 1. décla rer plusieurs fois la même métho de avec la même signature et des implémentations di\u001bérentes dans plusieurs classes : redé\u001cnition . 2. décla rer plusieurs fois la même métho de avec des signatures di\u001bérentes et des implémentations di\u001bérentes dans la même classe : surcha rge . Précision La signature d'une métho de est constituée du nom de la métho de, du nomb re et du t yp e de ses pa ramètres, et du t yp e qu'elle ren- voie. E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 71 / 90 Le p olymo rphisme en Java : exemple Exemple Soit 2 classes qui héritent de Appa reilElectrique public class FourElectrique { public void demarrer () { System. out . println (\"Montee/uni2423en/uni2423temperature\"); } } public class Ordinateur { public void demarrer () { System. out . println (\"Demarrage/uni2423de/uni2423Linux\"); } } E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 72 / 90 Le p olymo rphisme en Java : exemple (suite) public class Rectangle { public f l o a t largeur ; public f l o a t longueur ; Rectangle( f l o a tlargeur , f l o a tlongueur) { this. largeur=largeur ; this. longueur=longueur ; } public void redimensionner ( i n tfacteur ) { largeur = largeur \u0003facteur ; longueur = longueur \u0003facteur ; } public void redimensionner ( f l o a ta,f l o a tb) { largeur = largeur + a; longueur = longueur +b; }} E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 73 / 90 Le p olymo rphisme en Java : imp o rtant Imp o rtant On p eut dé\u001cnir autant de signatures que l'on veut de la même métho de (faire va rier le nomb re d'a rguments, changer le t yp e des a rguments, changer le t yp e de retour). Il y a néanmoins une restriction : si l'on dé\u001cnit plusieurs fois la même métho de dans une classe, la di\u001bérence entre deux signatures ne doit pas seulement être le t yp e de retour, i.e. , pa r exemple, on ne p eut pas écrire dans la même classe : public i n t f (i n ta) { ... } public f l o a t f (i n ta) { ... } E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 74 / 90 Compilation et exécution (1) Etap e 1 : on crée un \u001cchier texte dont le nom est le nom de la classe auquel on rajoute l'extension .java . Exemple On écrit la dé\u001cnition de la classe Logement dans un \u001cchier texte nommé Logement.java . Imp o rtant Un \u001cchier ne p eut contenir qu'une seule classe publique. E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 75 / 90 Compilation et exécution (2) Etap e 2 : on compile le p rogramme Java à l'aide de la commande javac . HelloW o rld.java public class HelloWorld f public static void main (String args[]) f System.out.println(\"Hello World!\"); gg javac HelloW o rld.java HelloW o rld.class 0 getstatic #7 < Field java.io.PrintStream out > 3 ldc #1 < String \"Hello World!\" > 5 invokevirtual #8 < Method void println(java.lang.String) > 8 return E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 76 / 90 Compilation et exécution (3) Etap e 3 : le JIT de la machine virtuelle compile à la volée le b yteco de p ro duit (c'est-à-dire on éxecute la métho de main ) à l'aide la commande java . java HelloW o rldHelloW o rld.class 0 getstatic #7 < Field java.io.PrintStream out > 3 ldc #1 < String \"Hello World!\" > 5 invokevirtual #8 < Method void println(java.lang.String) > 8 return Interpréteur javaMachine virtuelle Java : JVM/Système d'exploitationInterprétation Exécution E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 77 / 90 Compilation et interp rétation (4) Imp o rtant Bien positionner les variables d’environnement PATH : doit contenir le rép ertoire du compilateur et de la machine virtuelle. CLASSPATH : indique le chemin ou se trouve les classes (pa r défaut, le rép ertoire courant) sinon vous aurez le message d'erreur Exception in thread \"main\" java.lang.NoClassDefFoundError: HelloWorld E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 78 / 90 Outline Java c'est quoi ? Compa ratif : Java, C++ Compa ratif Concepts Pro duction du binaire Compa ratif Java C Sha rp (C#) Le langage Java. Les classes Java. Les attributs Java Les constructeurs Les métho des en Java Classes utiles : String, tableau et classes envelopp es E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 79 / 90 Classes utiles : String, tableau et classes envelopp es Java c'est quoi ? Compa ratif : Java, C++ Compa ratif Concepts Pro duction du binaire Compa ratif Java C Sha rp (C#) Le langage Java. Les classes Java. Les attributs Java Les constructeurs Les métho des en Java Classes utiles : String, tableau et classes envelopp es E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 80 / 90 Les chaînes de ca ractères : le t yp e String (1) Les chaînes de ca ractères sont des instances de la classe String . L'op érateur de concaténation des chaînes de ca ractères est l'op érateur + . A ttention P our compa rer deux chaînes de ca ractères, on utilise la métho de equals (ou equalsIgnoreCase ) de la classe String . String str1 = . . . . ; String str2 = . . . . ; i f( str1 . equals ( str2 )) {...} else{...} E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 81 / 90 Les chaînes de ca ractères : le t yp e String (2) La classe String o\u001bre de nomb reuses autres p ossibilités : I length() renvoie la longueur de la chaîne de ca ractères. I toUpperCase et toLowerCase p ermettent, resp ectivement, de mettre la chaîne de ca ractères en lettres majuscules et minuscules. I int indexOf (char ch) renvoie l'indice de la p remière o ccurence du ca ractère ch dans la chaîne de ca ractères. I String substring(int beginIndex,int endIndex) qui retourne la sous-chaîne constitué des ca ractères d'indice beginIndex à endIndex - 1 . I etc ... E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 82 / 90 Les tableaux Imp o rtant Un tableau est un objet ! Deux étap es : 1. Décla ration : déterminer le t yp e de ses éléments. 2. Dimensionnement : déterminer la taille du tableau (c'est-à-dire le nomb re d'éléments). E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 83 / 90 Les tableaux unidimensionnels La décla ration d'un tableau p récise simplement le t yp e des éléments du tableau : i n t[] tableau ; La dimension du tableau est p récisé lo rs de son instanciation // c r e e un t a b l e a u pouvant c o n t e n i r 50 e n t i e r s tableau = new i n t [50]; I La taille d'un tableau ne p eut plus être mo di\u001cée pa r la suite. I Dimension du tableau : tableau.length E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 84 / 90 Les tableaux unidimensionnels I On accède à l'élément d'indice i du tableau en écrivant tableau[i] . I Les indices commencent à 0. I Java véri\u001ce automatiquement l'indice lo rs de l'accès. Rema rque(s) On p eut aussi donner explicitement la liste des éléments :d'un tableau au moment de son instanciation : i n t[] tableau = {1 ,2 ,3}; String [] mots = {\"Licence\" ,\"MIAGE\" ,\"POO\"}; E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 85 / 90 Les tableaux unidimensionnels Rema rque(s) Si l'on décla re un tableau dont les éléments sont des références de t yp e logement : Logement [] ville ; Alo rs, la ligne de commande ville = newLogement [100]; instancie un tableau de 100 références initialisées à null . Si l'on veut qu'une case contienne une référence vers une instance de la classe Logement , on doit instancier une instance de la classe Logement et écrire la référence de l'instance dans la case : ville [50] = newLogement(67.0d,5e+5); E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 86 / 90 Les tableaux unidimensionnels L'a rgument args de la métho de main est un tableau dont les éléments sont des références vers des chaînes de ca ractères. Il p ermet de passer à la métho de main des pa ramètres en ligne de commande Exemple Si l'on écrit java Programme a 3 5.7 true alo rs args est un tableau de dimension 4 contenant les références vers les chaînes de ca ractères \"a\", \"3\", \"5.7\" et \"true\". Les références sont mises dans le même o rdre que sur la ligne de commande. P a r exemple, args[1] est une référence vers la chaîne de ca ractères \"3\". E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 87 / 90 Les classes envelopp es des t yp es p rimitifs A chaque t yp e p rimitif est asso cié une classe qu'on app elle classe envelopp e de ce t yp e p rimitif. Exemple La classe envelopp e du t yp e int est la classe Integer . Integer entier = newInteger (56); Chaque classe envelopp e d'un t yp e p rimitif p ossède une métho de p our convertir une instance de la classe en une valeur du t yp e p rimitif asso cié. Exemple i n ti = entier . intValue (); E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 88 / 90 Les classes envelopp es des t yp es p rimitifs P our les autres t yp es p rimitifs, les noms des classes envelopp es sont : T yp e p rimitif classe envelopp e short Sho rt long Long byte Byte ﬂoat Float double Double boolean Bo olean char Cha racter E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 89 / 90 Les classes envelopp es des t yp es p rimitifs Elles p ermettent notamment de convertir une chaîne de ca ractères en un entier, un \u001dottant, un b o oléen, etc ... Exemple Integer . parseInt (\"6\"); Double . parseDouble(\"6.89\"); Boolean . parseBoolean(\"false\"); E. Hy on (UPN) Intro duction à Java. L3 Miage - 2020/2021 90 / 90"
    }
}